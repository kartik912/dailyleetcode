class Solution
{
    public:
    struct Node* rev(struct Node* head) {
        Node *prev = NULL, *next=NULL, *curr = head;
        while(curr != NULL) {
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        head = prev;
    }
    //Function to add two numbers represented by linked list.
    struct Node* addTwoLists(struct Node* num1, struct Node* num2)
    {
        if(!num1) return num1;
        if(!num2) return num2;
        
        num1 = rev(num1);
        num2 = rev(num2);
        
        int sum=0, carry=0;
        Node *temp=NULL, *head = NULL, *tail = NULL;
        
        while(num1 || num2 || carry) {
            sum = carry + (num1 ? num1->data : 0) + (num2 ? num2->data : 0);
            carry = sum/10;
            sum = sum%10;
            temp = new Node(sum);
            if(!head) head = temp;
            else tail->next = temp;
            
            tail = temp;
            if(num1) num1 = num1->next;
            if(num2) num2 = num2->next;
        }
        head = rev(head);
        while(head->data == 0 && head->next) head = head->next;
        return head;
    }
};
